%{                
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <stdio.h>
int currentLine = 1;
%}  

%option noyywrap
%option caseless

DIGIT 		[0-9]
NZ_DIGIT    [1-9]
ZERO        [0]
INTEGER		{ZERO}|-*{NZ_DIGIT}+{DIGIT}*
CHARACTER 	"'"[^\n]"'"
STRING		[\"][^\n]*[\"]
CONSTANT		{STRING}|{INTEGER}|{CHARACTER}
IDENTIFIER 		[a-zA-Z_][a-zA-Z0-9_]*


%%

func {printf("A reserved word: %s\n", yytext);}
int {printf("A reserved word: %s\n", yytext);}
boolean {printf("A reserved word: %s\n", yytext);}
char {printf("A reserved word: %s\n", yytext);}
string {printf("A reserved word: %s\n", yytext);}
true {printf("A reserved word: %s\n", yytext);}
false {printf("A reserved word: %s\n", yytext);}
if {printf("A reserved word: %s\n", yytext);}
else {printf("A reserved word: %s\n", yytext);}
read {printf("A reserved word: %s\n", yytext);}
write {printf("A reserved word: %s\n", yytext);}
loop {printf("A reserved word: %s\n", yytext);}
while {printf("A reserved word: %s\n", yytext);}

{CONSTANT} {printf("A constant: %s\n", yytext);}
{IDENTIFIER} {printf("An identifier: %s\n", yytext);}

\[ {printf("A separator: %s\n", yytext);}
\] {printf("A separator: %s\n", yytext);}
\{ {printf("A separator: %s\n", yytext);}
\} {printf("A separator: %s\n", yytext);}
\; {printf("A separator: %s\n", yytext);}
\( {printf("A separator: %s\n", yytext);}
\) {printf("A separator: %s\n", yytext);}

\+ {printf("An operator: %s\n", yytext);} 
\- {printf("An operator: %s\n", yytext);}
\* {printf("An operator: %s\n", yytext);}
\/ {printf("An operator: %s\n", yytext);}
\% {printf("An operator: %s\n", yytext);}
\++ {printf("An operator: %s\n", yytext);}
\-- {printf("An operator: %s\n", yytext);}
":=" {printf("An operator: %s\n", yytext);}
\!= {printf("An operator: %s\n", yytext);}
\< {printf("An operator: %s\n", yytext);}
\> {printf("An operator: %s\n", yytext);}
\<= {printf("An operator: %s\n", yytext);}
\>= {printf("An operator: %s\n", yytext);}
"=" {printf("An operator: %s\n", yytext);}
"||" {printf("An operator: %s\n", yytext);}
"&&" {printf("An operator: %s\n", yytext);}


[\n]+ {currentLine++;}
[ \t\n]+ {}

[a-zA-Z_0-9][a-zA-Z0-9_]* {printf("%s - illegal identifier found at line %d\n", yytext, currentLine);}
\'[a-zA-Z0-9]*\' {printf("%s - illegal char at line %d, did you mean string?\n", yytext, currentLine);}

%%

void main(argc, argv)
int argc;
char** argv;
{           
if (argc > 1)
{
    FILE *file;
    file = fopen(argv[1], "r");
    if (!file)
    {
        fprintf(stderr, "Could not open %s\n", argv[1]);
        exit(1);
    }
    yyin = file;
}

yylex();
}